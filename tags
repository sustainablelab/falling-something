!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BRICK	main.c	/^    BRICK$/;"	e	enum:particle_type	file:
ColorAt	main.c	/^inline internal u32 ColorAt(int x, int y, u32 *screen_pixels)$/;"	f
ColorSetUnsafe	main.c	/^inline internal void ColorSetUnsafe(int x, int y, u32 color, u32 *screen_pixels)$/;"	f
ColorToType	main-new.c	/^inline internal enum particle_type ColorToType(u32 color)$/;"	f
DrawBorder	main.c	/^void internal DrawBorder(u32 * screen_pixels)$/;"	f
DrawParticles	main-new.c	/^internal void DrawParticles(particle_t * particle, u32 n, u32 *screen_pixels_prev)$/;"	f
DrawParticles	main-old.c	/^internal void DrawParticles(particle_t * particle, u32 n, u32 *screen_pixels_prev)$/;"	f
DrawParticles	main.c	/^internal void DrawParticles( u32 *screen_pixels_prev, u32 *screen_pixels_next)$/;"	f
FillRect	main-new.c	/^internal void FillRect(rect_t rect, u32 pixel_color, u32 *screen_pixels_prev)$/;"	f
FillRect	main-old.c	/^internal void FillRect(rect_t rect, u32 pixel_color, u32 *screen_pixels_prev)$/;"	f
FillRect	main.c	/^internal void FillRect(rect_t rect, u32 pixel_color, u32 *screen_pixels_prev)$/;"	f
InitParticles	main-new.c	/^internal void InitParticles(particle_t * particle, u32 n)$/;"	f
InitParticles	main-old.c	/^internal void InitParticles(particle_t * particle, u32 n)$/;"	f
InitParticles	main.c	/^internal void InitParticles(u32 * screen_pixels, u32 nseed_particles)$/;"	f
MAX_LOG_MSG	main-new.c	/^#define MAX_LOG_MSG /;"	d	file:
MAX_LOG_MSG	main-old.c	/^#define MAX_LOG_MSG /;"	d	file:
MAX_LOG_MSG	main.c	/^#define MAX_LOG_MSG /;"	d	file:
MoveParticles	main-new.c	/^internal void MoveParticles($/;"	f
MoveParticles	main-old.c	/^internal void MoveParticles($/;"	f
MoveParticles	moveparticles-old-block.c	/^internal void MoveParticles( u32 *screen_pixels_prev, u32 *screen_pixels_next)$/;"	f
NP	main-new.c	/^#define NP /;"	d	file:
NP	main-old.c	/^#define NP /;"	d	file:
NP	main.c	/^#define NP /;"	d	file:
NTYPES	main-new.c	/^#define NTYPES /;"	d	file:
NTYPES	main-old.c	/^#define NTYPES /;"	d	file:
NTYPES	main.c	/^#define NTYPES /;"	d	file:
SAND	main-new.c	/^    SAND,$/;"	e	enum:particle_type	file:
SAND	main-old.c	/^    SAND,$/;"	e	enum:particle_type	file:
SAND	main.c	/^    SAND,$/;"	e	enum:particle_type	file:
SAND_COLOR	main.c	/^#define SAND_COLOR /;"	d	file:
SCREEN_HEIGHT	main-new.c	/^#define SCREEN_HEIGHT /;"	d	file:
SCREEN_HEIGHT	main-old.c	/^#define SCREEN_HEIGHT /;"	d	file:
SCREEN_HEIGHT	main.c	/^#define SCREEN_HEIGHT /;"	d	file:
SCREEN_WIDTH	main-new.c	/^#define SCREEN_WIDTH /;"	d	file:
SCREEN_WIDTH	main-old.c	/^#define SCREEN_WIDTH /;"	d	file:
SCREEN_WIDTH	main.c	/^#define SCREEN_WIDTH /;"	d	file:
ValueAt	main-new.c	/^inline internal u32 ValueAt(int x, int y, u32 *screen_pixels_prev)$/;"	f
ValueAt	main-old.c	/^inline internal u32 ValueAt(int x, int y, u32 *screen_pixels_prev)$/;"	f
ValueSetUnsafe	main-new.c	/^inline internal void ValueSetUnsafe(int x, int y, u32 color, u32 *screen_pixels_prev)$/;"	f
ValueSetUnsafe	main-old.c	/^inline internal void ValueSetUnsafe(int x, int y, u32 color, u32 *screen_pixels_prev)$/;"	f
WATER	main-new.c	/^    WATER$/;"	e	enum:particle_type	file:
WATER	main-old.c	/^    WATER$/;"	e	enum:particle_type	file:
WATER	main.c	/^    WATER,$/;"	e	enum:particle_type	file:
bgnd	main-new.c	/^    rect_t bgnd = {0,0, SCREEN_WIDTH, SCREEN_HEIGHT};$/;"	l
bgnd	main-old.c	/^    rect_t bgnd = {0,0, SCREEN_WIDTH, SCREEN_HEIGHT};$/;"	l
bgnd	main.c	/^    rect_t bgnd = {0,0, SCREEN_WIDTH, SCREEN_HEIGHT};$/;"	l
bool	main-new.c	/^typedef uint8_t bool;$/;"	t	file:
bool	main-old.c	/^typedef uint8_t bool;$/;"	t	file:
bool	main.c	/^typedef uint8_t bool;$/;"	t	file:
clear_log_file	main-new.c	/^internal void clear_log_file(void)$/;"	f
clear_log_file	main-old.c	/^internal void clear_log_file(void)$/;"	f
clear_log_file	main.c	/^internal void clear_log_file(void)$/;"	f
code	main-new.c	/^            SDL_Keycode code = event.key.keysym.sym;$/;"	l
code	main-old.c	/^            SDL_Keycode code = event.key.keysym.sym;$/;"	l
code	main.c	/^            SDL_Keycode code = event.key.keysym.sym;$/;"	l
color_at_loc	main-new.c	/^            u32 color_at_loc = ValueAt(tmp_x, tmp_y, screen_pixels_next)$/;"	l
colors	main-new.c	/^const static u32 colors[NTYPES] = {$/;"	v	file:
colors	main-old.c	/^const static u32 colors[NTYPES] = {$/;"	v	file:
colors	main.c	/^const static u32 colors[NTYPES] = {$/;"	v	file:
debug_led	main-new.c	/^    rect_t debug_led = {$/;"	l
debug_led	main-old.c	/^    rect_t debug_led = {$/;"	l
debug_led_color	main-new.c	/^    u32 debug_led_color = 0x00FF0000; \/\/ green$/;"	l
debug_led_color	main-old.c	/^    u32 debug_led_color = 0x00FF0000; \/\/ green$/;"	l
debug_led_h	main-new.c	/^    int debug_led_h = SCREEN_HEIGHT\/50;$/;"	l
debug_led_h	main-old.c	/^    int debug_led_h = SCREEN_HEIGHT\/50;$/;"	l
debug_led_w	main-new.c	/^    int debug_led_w = SCREEN_WIDTH\/50;$/;"	l
debug_led_w	main-old.c	/^    int debug_led_w = SCREEN_WIDTH\/50;$/;"	l
dir_y	main-new.c	/^    int dir_y; \/\/ sloshing bit (side to side, ya know, y)$/;"	m	struct:__anon4	file:
dir_y	main-old.c	/^    int dir_y; \/\/ sloshing bit (side to side, ya know, y)$/;"	m	struct:__anon6	file:
done	main-new.c	/^    bool done = false;$/;"	l
done	main-old.c	/^            bool done = false;$/;"	l
done	main-old.c	/^    bool done = false;$/;"	l
done	main.c	/^    bool done = false;$/;"	l
done	moveparticles-old-block.c	/^            bool done = false;$/;"	l
dx	main-new.c	/^        int dx=0;$/;"	l
dx	main-old.c	/^        int dx=0;$/;"	l
dx	moveparticles-old-block.c	/^        int dx=0;$/;"	l
dy	main-new.c	/^        int dy=0;$/;"	l
dy	main-old.c	/^        int dy=0;$/;"	l
dy	moveparticles-old-block.c	/^        int dy=0;$/;"	l
event	main-new.c	/^        SDL_Event event;$/;"	l
event	main-old.c	/^        SDL_Event event;$/;"	l
event	main.c	/^        SDL_Event event;$/;"	l
f	main-new.c	/^FILE *f;$/;"	l
f	main-old.c	/^FILE *f;$/;"	v
f	main.c	/^FILE *f;$/;"	v
false	main-new.c	/^#define false /;"	d	file:
false	main-old.c	/^#define false /;"	d	file:
false	main.c	/^#define false /;"	d	file:
format	main-new.c	/^    SDL_PixelFormat *format = SDL_AllocFormat(SDL_PIXELFORMAT_RGBA8888);$/;"	l
format	main-old.c	/^    SDL_PixelFormat *format = SDL_AllocFormat(SDL_PIXELFORMAT_RGBA8888);$/;"	l
format	main.c	/^    SDL_PixelFormat *format = SDL_AllocFormat(SDL_PIXELFORMAT_RGBA8888);$/;"	l
h	main-new.c	/^    int h;$/;"	m	struct:__anon3	file:
h	main-old.c	/^    int h;$/;"	m	struct:__anon5	file:
h	main.c	/^    int h;$/;"	m	struct:__anon7	file:
info	main-new.c	/^    SDL_RendererInfo info;$/;"	l
info	main-old.c	/^    SDL_RendererInfo info;$/;"	l
info	main.c	/^    SDL_RendererInfo info;$/;"	l
internal	main-new.c	/^#define internal /;"	d	file:
internal	main-old.c	/^#define internal /;"	d	file:
internal	main.c	/^#define internal /;"	d	file:
intmax	main-new.c	/^int intmax(int a, int b)$/;"	f
intmax	main-old.c	/^int intmax(int a, int b)$/;"	f
intmax	main.c	/^int intmax(int a, int b)$/;"	f
intmin	main-new.c	/^int intmin(int a, int b)$/;"	f
intmin	main-old.c	/^int intmin(int a, int b)$/;"	f
intmin	main.c	/^int intmin(int a, int b)$/;"	f
log_me_xy	main-new.c	/^bool log_me_xy = false;$/;"	l
log_me_xy	main-old.c	/^bool log_me_xy = false;$/;"	v
log_me_xy	main.c	/^bool log_me_xy = false;$/;"	v
log_msg	main-new.c	/^char log_msg[MAX_LOG_MSG];$/;"	l
log_msg	main-old.c	/^char log_msg[MAX_LOG_MSG];$/;"	v
log_msg	main.c	/^char log_msg[MAX_LOG_MSG];$/;"	v
log_renderer_info	main-new.c	/^internal void log_renderer_info(SDL_Renderer * renderer)$/;"	f
log_renderer_info	main-old.c	/^internal void log_renderer_info(SDL_Renderer * renderer)$/;"	f
log_renderer_info	main.c	/^internal void log_renderer_info(SDL_Renderer * renderer)$/;"	f
log_to_file	main-new.c	/^internal void log_to_file(char * log_msg)$/;"	f
log_to_file	main-old.c	/^internal void log_to_file(char * log_msg)$/;"	f
log_to_file	main.c	/^internal void log_to_file(char * log_msg)$/;"	f
main	main-new.c	/^int main(int argc, char **argv)$/;"	f
main	main-old.c	/^int main(int argc, char **argv)$/;"	f
main	main.c	/^int main(int argc, char **argv)$/;"	f
me	main-new.c	/^    rect_t me = {$/;"	l
me	main-old.c	/^    rect_t me = {$/;"	l
me	main.c	/^    rect_t me = {$/;"	l
me_color	main-new.c	/^    u32 me_color = 0x22FF00FF; \/\/ RGBA$/;"	l
me_color	main-old.c	/^    u32 me_color = 0x22FF00FF; \/\/ RGBA$/;"	l
me_color	main.c	/^    u32 me_color = 0x22FF00FF; \/\/ RGBA$/;"	l
me_h	main-new.c	/^    int me_h = SCREEN_HEIGHT\/50;$/;"	l
me_h	main-old.c	/^    int me_h = SCREEN_HEIGHT\/50;$/;"	l
me_h	main.c	/^    int me_h = SCREEN_HEIGHT\/50;$/;"	l
me_w	main-new.c	/^    int me_w = SCREEN_WIDTH\/50;$/;"	l
me_w	main-old.c	/^    int me_w = SCREEN_WIDTH\/50;$/;"	l
me_w	main.c	/^    int me_w = SCREEN_WIDTH\/50;$/;"	l
nothing_color	main-new.c	/^static const u32 nothing_color = 0x00000000;$/;"	v	file:
nothing_color	main-old.c	/^static const u32 nothing_color = 0x00000000;$/;"	v	file:
nothing_color	main.c	/^static const u32 nothing_color = 0x00000000;$/;"	v	file:
out_of_bounds_color	main.c	/^static const u32 out_of_bounds_color = 0x00000001;$/;"	v	file:
particle_t	main-new.c	/^} particle_t;$/;"	t	typeref:struct:__anon4	file:
particle_t	main-old.c	/^} particle_t;$/;"	t	typeref:struct:__anon6	file:
particle_type	main-new.c	/^enum particle_type$/;"	g	file:
particle_type	main-old.c	/^enum particle_type$/;"	g	file:
particle_type	main.c	/^enum particle_type$/;"	g	file:
particles	main-new.c	/^static particle_t particles[NP];$/;"	v	file:
particles	main-old.c	/^static particle_t particles[NP];$/;"	v	file:
pathlib	parse-lib-tags.py	/^import pathlib$/;"	i
pressed_down	main-new.c	/^    bool pressed_down  = false;$/;"	l
pressed_down	main-old.c	/^    bool pressed_down  = false;$/;"	l
pressed_down	main.c	/^    bool pressed_down  = false;$/;"	l
pressed_left	main-new.c	/^    bool pressed_left  = false;$/;"	l
pressed_left	main-old.c	/^    bool pressed_left  = false;$/;"	l
pressed_left	main.c	/^    bool pressed_left  = false;$/;"	l
pressed_right	main-new.c	/^    bool pressed_right = false;$/;"	l
pressed_right	main-old.c	/^    bool pressed_right = false;$/;"	l
pressed_right	main.c	/^    bool pressed_right = false;$/;"	l
pressed_up	main-new.c	/^    bool pressed_up    = false;$/;"	l
pressed_up	main-old.c	/^    bool pressed_up    = false;$/;"	l
pressed_up	main.c	/^    bool pressed_up    = false;$/;"	l
rect_t	main-new.c	/^} rect_t;$/;"	t	typeref:struct:__anon3	file:
rect_t	main-old.c	/^} rect_t;$/;"	t	typeref:struct:__anon5	file:
rect_t	main.c	/^} rect_t;$/;"	t	typeref:struct:__anon7	file:
renderer	main-new.c	/^    SDL_Renderer *renderer = SDL_CreateRenderer($/;"	l
renderer	main-old.c	/^    SDL_Renderer *renderer = SDL_CreateRenderer($/;"	l
renderer	main.c	/^    SDL_Renderer *renderer = SDL_CreateRenderer($/;"	l
screen	main-new.c	/^    SDL_Texture *screen = SDL_CreateTexture($/;"	l
screen	main-old.c	/^    SDL_Texture *screen = SDL_CreateTexture($/;"	l
screen	main.c	/^    SDL_Texture *screen = SDL_CreateTexture($/;"	l
screen_pixels_next	main-new.c	/^    u32 *screen_pixels_next = (u32*) calloc(SCREEN_WIDTH * SCREEN_HEIGHT, sizeof(u32));$/;"	l
screen_pixels_next	main-old.c	/^    u32 *screen_pixels_next = (u32*) calloc(SCREEN_WIDTH * SCREEN_HEIGHT, sizeof(u32));$/;"	l
screen_pixels_next	main.c	/^    u32 *screen_pixels_next = (u32*) calloc(SCREEN_WIDTH * SCREEN_HEIGHT, sizeof(u32));$/;"	l
screen_pixels_prev	main-new.c	/^    u32 *screen_pixels_prev = (u32*) calloc(SCREEN_WIDTH * SCREEN_HEIGHT, sizeof(u32));$/;"	l
screen_pixels_prev	main-old.c	/^    u32 *screen_pixels_prev = (u32*) calloc(SCREEN_WIDTH * SCREEN_HEIGHT, sizeof(u32));$/;"	l
screen_pixels_prev	main.c	/^    u32 *screen_pixels_prev = (u32*) calloc(SCREEN_WIDTH * SCREEN_HEIGHT, sizeof(u32));$/;"	l
tmp	main-new.c	/^            u32 *tmp = screen_pixels_prev;$/;"	l
tmp	main-old.c	/^            u32 *tmp = screen_pixels_prev;$/;"	l
tmp	main.c	/^            u32 *tmp = screen_pixels_prev;$/;"	l
tmp_type	main-new.c	/^        int tmp_type = particles[i].type;$/;"	l
tmp_x	main-new.c	/^        int tmp_x = particles[i].x;$/;"	l
tmp_x	main-old.c	/^        int tmp_x = particles[i].x;$/;"	l
tmp_x	moveparticles-old-block.c	/^        int tmp_x = particles[i].x;$/;"	l
tmp_y	main-new.c	/^        int tmp_y = particles[i].y;$/;"	l
tmp_y	main-old.c	/^        int tmp_y = particles[i].y;$/;"	l
tmp_y	moveparticles-old-block.c	/^        int tmp_y = particles[i].y;$/;"	l
true	main-new.c	/^#define true /;"	d	file:
true	main-old.c	/^#define true /;"	d	file:
true	main.c	/^#define true /;"	d	file:
type	main-new.c	/^    enum particle_type type;$/;"	m	struct:__anon4	typeref:enum:__anon4::particle_type	file:
type	main-old.c	/^    enum particle_type type;$/;"	m	struct:__anon6	typeref:enum:__anon6::particle_type	file:
u32	main-new.c	/^typedef uint32_t u32;$/;"	t	file:
u32	main-old.c	/^typedef uint32_t u32;$/;"	t	file:
u32	main.c	/^typedef uint32_t u32;$/;"	t	file:
w	main-new.c	/^    int w;$/;"	m	struct:__anon3	file:
w	main-old.c	/^    int w;$/;"	m	struct:__anon5	file:
w	main.c	/^    int w;$/;"	m	struct:__anon7	file:
win	main-new.c	/^    SDL_Window *win = SDL_CreateWindow($/;"	l
win	main-old.c	/^    SDL_Window *win = SDL_CreateWindow($/;"	l
win	main.c	/^    SDL_Window *win = SDL_CreateWindow($/;"	l
x	main-new.c	/^    int x;$/;"	m	struct:__anon3	file:
x	main-new.c	/^    int x;$/;"	m	struct:__anon4	file:
x	main-old.c	/^    int x;$/;"	m	struct:__anon5	file:
x	main-old.c	/^    int x;$/;"	m	struct:__anon6	file:
x	main.c	/^        int x = rand() % SCREEN_HEIGHT; \/\/ random row$/;"	l
x	main.c	/^    int x;$/;"	m	struct:__anon7	file:
xabove	main-new.c	/^        const u32 xabove = particles[i].x - 1;$/;"	l
xabove	main-old.c	/^        const u32 xabove = particles[i].x - 1;$/;"	l
xabove	moveparticles-old-block.c	/^        const u32 xabove = particles[i].x - 1;$/;"	l
xbelow	main-new.c	/^        const u32 xbelow = particles[i].x + 1;$/;"	l
xbelow	main-old.c	/^        const u32 xbelow = particles[i].x + 1;$/;"	l
xbelow	moveparticles-old-block.c	/^        const u32 xbelow = particles[i].x + 1;$/;"	l
y	main-new.c	/^    int y;$/;"	m	struct:__anon3	file:
y	main-new.c	/^    int y;$/;"	m	struct:__anon4	file:
y	main-old.c	/^    int y;$/;"	m	struct:__anon5	file:
y	main-old.c	/^    int y;$/;"	m	struct:__anon6	file:
y	main.c	/^        int y = rand() % SCREEN_WIDTH;  \/\/ random col$/;"	l
y	main.c	/^    int y;$/;"	m	struct:__anon7	file:
